install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
installed.packages("ggplot2")
install.packages("ggplot2")
install.packages("tidyr")
install.packages("tidyr")
library(cran)
install.packages("cran")
install.packages("installr")
install.packages("ggplot2")
library(ggplot2)
install.packages("tidyr")
install.packages("dplyr")
install.packages("caret")
library(caret)
library(ggplot2)
library(dplyr)
library(tidyr)
library(caret)
install.packages("caret")
library(caret)
setwd("~/GitHub/Big Mart Data")
setwd("~/GitHub/Loan_Data")
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(VIM)
data <- read.csv("train-file.csv")
#Creating Factor Variables
data$Credit_History <- factor(data$Credit_History, labels = c("No", "Yes"))
data_sub <- data %>%
select(-Loan_ID)
#Using kNN imputation
data_sub <- kNN(data_sub)
#Removing Variables Created by Imputation
data_sub <- data_sub %>%
select(-(Gender_imp:Loan_Status_imp))
set.seed(366284)
inTrain <- createDataPartition(y = data_sub$Loan_Status, p = 0.7, list=FALSE)
train <- data_sub[inTrain, ]
test <- data_sub[-inTrain, ]
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE, classProbs = TRUE)
algorithmList <- c('lda', 'C5.0', 'rpart', 'ranger', 'treebag', 'gbm', 'bagEarth')
models <- caretList(Item_Outlet_Sales ~ ., train, trControl = control, methodList = algorithmList)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(caretEnsemble)
library(VIM)
data <- read.csv("train-file.csv")
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE, classProbs = TRUE)
algorithmList <- c('lda', 'C5.0', 'rpart', 'ranger', 'treebag', 'gbm', 'bagEarth')
models <- caretList(Item_Outlet_Sales ~ ., train, trControl = control, methodList = algorithmList)
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE, classProbs = TRUE)
algorithmList <- c('lda', 'C5.0', 'rpart', 'ranger', 'treebag', 'gbm', 'bagEarth')
models <- caretList(Loan_Status ~ ., train, trControl = control, methodList = algorithmList)
results <- resamples(models)
summary(results)
stack_glm <- caretStack(models, method = "glm", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_glm
predictions_glm <- predict(stack_glm, test)
confusionMatrix(predictions_glm, test$Loan_Status)
stack_rf <- caretStack(models, method = "ranger", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_rf
predictions_rf <- predict(stack_rf, test)
confusionMatrix(predictions_rf, test$Loan_Status)
stack_glm <- caretStack(models, method = "glmnet", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_glm
predictions_glm <- predict(stack_glm, test)
confusionMatrix(predictions_glm, test$Loan_Status)
stack_glm <- caretStack(models, method = "C5.0", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_glm
predictions_glm <- predict(stack_glm, test)
confusionMatrix(predictions_glm, test$Loan_Status)
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE, classProbs = TRUE)
algorithmList <- c('lda', 'ada', 'C5.0', 'rpart', 'ranger', 'treebag', 'gbm', 'bagEarth')
models <- caretList(Loan_Status ~ ., train, trControl = control, methodList = algorithmList)
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE, classProbs = TRUE)
algorithmList <- c('lda', 'ada', 'C5.0', 'rpart', 'ranger', 'treebag', 'gbm', 'bagEarth')
models <- caretList(Loan_Status ~ ., train, trControl = control, methodList = algorithmList)
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE, classProbs = TRUE)
algorithmList <- c('lda', 'C5.0', 'rpart', 'ranger', 'treebag', 'gbm', 'bagEarth')
models <- caretList(Loan_Status ~ ., train, trControl = control, methodList = algorithmList)
results <- resamples(models)
summary(results)
stack_glm <- caretStack(models, method = "glm", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_glm
predictions_glm <- predict(stack_glm, test)
confusionMatrix(predictions_glm, test$Loan_Status)
stack_glm <- caretStack(models, method = "glm", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_glm
predictions_glm <- predict(stack_glm, test)
confusionMatrix(predictions_glm, test$Loan_Status)
stack_glm <- caretStack(models, method = "ranger", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_bag <- caretStack(models, method = "treebag", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_bag
predictions_bag <- predict(stack_bag, test)
confusionMatrix(predictions_bag, test$Loan_Status)
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE, classProbs = TRUE)
algorithmList <- c('lda', 'C5.0', 'ranger', 'treebag', 'bagEarth')
models <- caretList(Loan_Status ~ ., train, trControl = control, methodList = algorithmList)
results <- resamples(models)
summary(results)
stack_bag <- caretStack(models, method = "treebag", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_bag
predictions_bag <- predict(stack_bag, test)
confusionMatrix(predictions_bag, test$Loan_Status)
stack_rf <- caretStack(models, method = "ranger", trControl = trainControl(method = "repeatedcv", number = 10, repeats = 3, savePredictions = TRUE))
stack_rf
predictions_rf <- predict(stack_rf, test)
confusionMatrix(predictions_rf, test$Loan_Status)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(caret)
library(caretEnsemble)
library(VIM)
data <- read.csv("train-file.csv")
#Creating Factor Variables
data$Credit_History <- factor(data$Credit_History, labels = c("No", "Yes"))
data_sub <- data %>%
select(-Loan_ID)
